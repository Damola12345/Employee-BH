name: Build and Push Go to AWS ECR
on:
  push:
    branches: [ develop ]
jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

# name: Terraform Pipeline

# on:
#   push:
#     branches:
#       - develop
#   workflow_dispatch:
#     inputs:
#       action:
#         description: 'Choose the Terraform action (apply/destroy)'
#         required: true
#         default: 'apply'

# env:
#   # verbosity setting for Terraform logs
#   TF_LOG: INFO
#   # Credentials for deployment to AWS
#   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#   AWS_REGION: eu-west-1

# jobs:
#   terraform:
#     name: Terraform Workflow
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         shell: bash
#         working-directory: ./terraform/ecs-fargate

#     steps:
#       # Checkout repository
#       - name: Checkout Repository
#         uses: actions/checkout@v3

#       # Setup Terraform
#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v2
#         with:
#           terraform_version: 1.5.6

#       # Initialize Terraform
#       - name: Terraform Init
#         run: terraform init

#       # Validate Terraform
#       - name: Terraform Validate
#         run: terraform validate

#       # Terraform Plan
#       - name: Terraform Plan
#         run: terraform plan -out=tfplan

#       # Apply Terraform Changes
#       - name: Terraform Apply
#         if: github.event_name == 'push' || github.event.inputs.action == 'apply'
#         run: terraform apply -auto-approve tfplan

#   destroy:
#     name: Terraform Cleanup
#     runs-on: ubuntu-latest
#     if: github.event.inputs.action == 'destroy' # Trigger only for destroy input
#     steps:
#       # Checkout repository
#       - name: Checkout Repository
#         uses: actions/checkout@v3

#       # Setup Terraform
#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v2
#         with:
#           terraform_version: 1.5.6

#       # Initialize Terraform
#       - name: Terraform Init
#         run: terraform init

#       # Destroy Terraform Resources
#       - name: Terraform Destroy
#         run: terraform destroy -auto-approve
