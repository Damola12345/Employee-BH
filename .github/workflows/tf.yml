name: Terraform Pipeline

on:
  push:
    branches:
      - ft/develop
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose the Terraform action (apply/destroy)'
        required: true
        default: 'destroy'

env:
  # verbosity setting for Terraform logs
  TF_LOG: INFO
  # Credentials for deployment to AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: eu-west-1

jobs:
  terraform:
    name: Terraform Workflow
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform/ecs-fargate

    steps:
      # Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Validate Terraform
      - name: Terraform Validate
        run: terraform validate

      # Terraform Plan
      - name: Terraform Plan
        run: terraform plan -out=tfplan

      # Apply Terraform Changes
      - name: Terraform Apply
        if: github.event_name == 'push' || github.event.inputs.action == 'apply'
        run: terraform apply -auto-approve tfplan

  destroy:
    name: Terraform Cleanup
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.event.inputs.action == 'destroy' # Trigger only for destroy input
    steps:
      # Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Destroy Terraform Resources
      - name: Terraform Destroy
        run: terraform destroy -auto-approve
